import { render, screen } from '@testing-library/react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import {{functionInfo.getName()}} from '@/app/(tabs)/{{functionInfo.getFileName()}}';

{%if functionInfo.getExpoFontMock()%}
jest.mock('expo-font', () => ({
  loadAsync: jest.fn(() => Promise.resolve()),
  isLoaded: jest.fn(() => true),
}));
{%endif%}

describe('{{functionInfo.getName()}}', () => {
{%if functionInfo.getText()%}
  test('should render {{functionInfo.getName()}} text', () => {
    // Render the HomeScreen component wrapped in the navigator
    const {getByText} = render(
      <NavigationContainer>
      <{{functionInfo.getName()}} />
      </NavigationContainer>);
    {%for text in functionInfo.getText()%}
    expect(getByText("{{ text | replace('\n', '\\n') }}")).toBeTruthy();
    {%endfor%} 
  });
{%endif%}
{%if functionInfo.getImages()%}
  test('should render {{functionInfo.getName()}} images', () => {
    // Render the HomeScreen component wrapped in the navigator
    const {getByTestId } = render(
      <NavigationContainer>
      <{{functionInfo.getName()}} />
      </NavigationContainer>);
    {%for image in functionInfo.getImages()%}
    expect(getByTestId({{image}})).toBeTruthy();
    {%endfor%}
  });
{%endif%}
{%if functionInfo.getPlaceholders()%}
  test('should render {{functionInfo.getName()}} placeholder text', () => {
    // Render the HomeScreen component wrapped in the navigator
    const { getByPlaceholderText } = render(
      <NavigationContainer>
      <{{functionInfo.getName()}} />
      </NavigationContainer>);
    {%for placeholder in functionInfo.getPlaceholders()%}
    expect(getByPlaceholderText({{placeholder}})).toBeTruthy();
    {%endfor%}
  });
{%endif%}});